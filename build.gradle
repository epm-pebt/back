plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'pmd'
}

group = 'com.epam'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

	runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}
test {
	useJUnitPlatform()

	ignoreFailures = true
}

jacoco {
	toolVersion = "0.8.7"
}

/*jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
		csv.required = false
		html.outputLocation.set(layout.buildDirectory.dir("jacocoHtml"))
	}
	executionData(test)

}
test.finalizedBy jacocoTestReport*/
pmd {
	toolVersion = "6.34.0"

}
pmdMain {
	ignoreFailures = true
	ruleSets = ["java-basic", "java-design", "java-unusedcode"]
}